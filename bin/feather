#!/usr/bin/env php
<?php

namespace Feather;

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Output\ConsoleOutput;

// -------------------------------------- verify PHP version ---------------------------------------
if (version_compare('5.6.0', PHP_VERSION, '>') && $argv[1] !== '--version') {
    fwrite(
        STDERR,
        sprintf(
            'This version of Feather is supported on PHP 5.6, PHP 7.0 and PHP 7.1.' . PHP_EOL .
            'You are using PHP %s (%s).' . PHP_EOL,
            PHP_VERSION,
            PHP_BINARY
        )
    );

    die(1);
}

$currentDirectory = __DIR__;

// --------------------------- find and require the composer autoloader ----------------------------
$potentialAutoloadFiles = [
    "{$currentDirectory}/../../../autoload.php",
    "{$currentDirectory}/../vendor/autoload.php",
    "{$currentDirectory}/vendor/autoload.php"
];

foreach ($potentialAutoloadFiles as $file) {
    if (file_exists($file)) {
        define('COMPOSER_AUTOLOADER', $file);
        break;
    }
}

if (defined('COMPOSER_AUTOLOADER') === false) {
    fwrite(
        STDERR,
        'No vendor directory found'.PHP_EOL.
        'are you sure you installed dependencies via `composer install`?'.PHP_EOL
    );

    die(1);
}

require COMPOSER_AUTOLOADER;

// --------------------------------- create Feather version const ----------------------------------
// $composer_data = json_decode(file_get_contents("{$currentDirectory}/../composer.json"), true);
// define('Feather\VERSION', $composer_data['version']);
define('Feather\VERSION', getVersion());

// -------------------------- create the Feather app and launcher command --------------------------
$featherApp = new Application('feather', VERSION);
$featherRunTestsCommand = new RunFeatherTestsConsoleAppCommand();
$featherApp->add($featherRunTestsCommand);
$featherApp->setDefaultCommand($featherRunTestsCommand->getName(), true);

// --------------------------------------- clean up globals ----------------------------------------
unset($currentDirectory);
unset($composer_data);
unset($file);
unset($potentialAutoloadFiles);
unset($featherRunTestsCommand);

// ------------------------------------------ run Feather ------------------------------------------
$featherApp->run();
